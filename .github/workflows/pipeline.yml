name: vue3.dev

on:
  push:
    branches:
      - master
jobs:
  check_build_upload:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Show Node.js version
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"

      - name: Install Dependencies
        run: |
          npm install --frozen-lockfile
          echo "=== Main Dependencies ==="
          npm list --depth=0
          echo "=== Vue Dependencies ==="
          npm list vue @pathscale/vue3-ui vue-router --depth=0
          echo "=== package.json ==="
          cat package.json
          echo "=== package-lock.json (main dependencies only) ==="
          grep -A 5 '"dependencies":' package-lock.json

      - name: Npm audit
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm audit --prod

      - name: Set version
        run: |
          echo "Version: 1.0.$GITHUB_RUN_NUMBER"
          sed -i "s/\"version\": \"1.0.0\"/\"version\": \"1.0.$GITHUB_RUN_NUMBER\"/" package.json
          sed -i "s/VUE_APP_VERSION_NUMBER = 1.0.0/VUE_APP_VERSION_NUMBER = 1.0.$GITHUB_RUN_NUMBER/" .env

      - name: Check version
        run: |
          cat package.json | grep version
          cat .env | grep VUE_APP_VERSION_NUMBER

      - name: Build project
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          echo "=== Starting build ==="
          npm run build --if-present
          echo "=== Build information ==="
          ls -la dist/
          echo "=== index.html content ==="
          cat dist/index.html
          echo "=== main.js content ==="
          cat dist/assets/main.js | head -n 50
          echo "=== vendor.js content ==="
          cat dist/assets/vendor.js | head -n 50

      - name: Analyze build for potential issues
        run: |
          echo "=== Analyzing potential loops ==="
          # Look for common loop patterns
          grep -r "while.*true" dist/ || true
          grep -r "for.*in" dist/ || true
          grep -r "setInterval" dist/ || true
          grep -r "setTimeout" dist/ || true
          echo "=== Looking for recursive calls ==="
          grep -r "function.*(" dist/ | grep -v "function.*(" | head -n 20 || true

      - name: Configure compression
        run: |
          cd dist
          sed 's/.css/.scss/g' index.html -i
          sed 's/.js/.mjs/g' index.html -i
          for file in *.css.br*; do mv "$file" "${file/.css.br/.scss}"; done
          for file in *.js.br*; do mv "$file" "${file/.js.br/.mjs}"; done

      - name: Mirror index.html to 404
        run: |
          cd dist
          mkdir bunnycdn_errors
          cp index.html bunnycdn_errors/404.html

      - name: Upload to bunnycdn
        env:
          STORAGE_API_KEY: ${{ secrets.BUNNYCDN_STORAGE_API_KEY }}
          ZONE_API_KEY: ${{ secrets.BUNNYCDN_ZONE_API_KEY }}
          ZONE_ID: ${{ secrets.BUNNYCDN_DEV_ZONE_ID }}
        run: |
          cd dist
          find ./ -name '*' -type f -exec curl -s --request PUT --header "AccessKey: $STORAGE_API_KEY" -T {} https://storage.bunnycdn.com/vue3--dev/{} \;
          curl -s --request POST --header "AccessKey: $ZONE_API_KEY" --header "Content-Type: application/json" --header "Accept: application/json" https://bunnycdn.com/api/pullzone/$ZONE_ID/purgeCache --data {"id":$ZONE_ID}
